version: '3.3'

services:

  backend:
    container_name: artists_backend
    build:
      context: .
      dockerfile: Dockerfile.local
    command: gunicorn --bind :8000 --workers 3  --reload --timeout 3600 artists.wsgi
    restart: always
    environment:
      DJANGO_SETTINGS_MODULE: 'artists.settings.local'
    env_file:
      - .env
    logging:
      options:
        max-size: 50m
    depends_on:
      - postgres
    volumes:
      - staticRoot:/artists/artists/static
      - .:/code/
    expose:
      - "8000"
    ports:
      - "8000:8000"

  celery:
    command: celery -A artists worker -l info --queues celery,celery-email
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.local
    environment:
      DJANGO_SETTINGS_MODULE: 'artists.settings.local'
    env_file:
      - .env
    logging:
      options:
        max-size: 50m
    depends_on:
      - postgres
      - rabbit
      - redis
    volumes:
      - staticRoot:/artists/artists/static
      - .:/code/
  flower:
    command: celery -A artists flower --basic_auth=admin:admin
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.local
    environment:
      DJANGO_SETTINGS_MODULE: 'artists.settings.local'
    env_file:
      - .env
    logging:
      options:
        max-size: 50m
    depends_on:
      - celery
      - rabbit
      - redis
    expose:
      - "5555"
    ports:
      - "5555:5555"
    volumes:
      - artists_static_volume:/artists/artists/static
      - artists_media_volume:/artists/media
      - .:/code/

  celery-beat:
    command: celery -A artists beat -l info
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.local
    env_file:
      - .env
    logging:
      options:
        max-size: 50m
    depends_on:
      - postgres
      - rabbit
      - redis
    volumes:
      - .:/code


  rabbit:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password

  redis:
    image: "redis:alpine"
    restart: always
    hostname: redis
    ports:
      - "6379:6379"

  postgres:
    image: postgres:13.5-alpine
    restart: always
    environment:
      - POSTGRES_USER=artists
      - POSTGRES_PASSWORD=artists
      - POSTGRES_DB=artists
    ports:
      - '5433:5432'
    volumes:
      - db:/var/lib/postgresql/data

volumes:
  db:
  staticRoot:
  artists_static_volume:
  artists_media_volume:

